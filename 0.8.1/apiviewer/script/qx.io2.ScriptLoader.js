{type:"class",attributes:{"packageName":"qx.io2","fullName":"qx.io2.ScriptLoader","type":"bootstrap","name":"ScriptLoader"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span> &#8211; <span class=\"caps\">NOT</span> <span class=\"caps\">READY</span> <span class=\"caps\">FOR</span> <span class=\"caps\">PRODUCTION</span></p>\n\n<p>Loading of local or remote scripts.</p>\n\n<ul>\n<li>Supports cross-domain communication</li>\n<li>Automatically &#8220;embeds&#8221; script so when the loaded event occours the new features are useable as well</li>\n</ul>\n\n<p>All request relevant data is given through {@link #load}. Pooling of\nan instance for multiple usage should possible.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"}}]},{type:"methods-static",children:[{type:"method",attributes:{"isStatic":"true","name":"get"},children:[{type:"desc",attributes:{"text":"<p>Gets a new script loader instance.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>A loader instance</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.io2.ScriptLoader"}}]}]}]},{type:"method",attributes:{"isStatic":"true","name":"pool"},children:[{type:"params",children:[{type:"param",attributes:{"name":"loader"},children:[{type:"desc",attributes:{"text":"<p>Loader instance</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.io2.ScriptLoader"}}]}]}]},{type:"desc",attributes:{"text":"<p>Pools a loader for re-usage.</p>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"private","name":"__cleanup"},children:[{type:"params",children:[{type:"param",attributes:{"name":"status"},children:[{type:"desc",attributes:{"text":"<p>Any of success, fail or abort.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal cleanup method used after every successful\nor failed loading attempt.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"private","name":"__onevent"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"},children:[{type:"desc",attributes:{"text":"<p>Native event object</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Event"}}]}]}]},{type:"desc",attributes:{"text":"<p>Internal event listener for load and error events.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"abort"},children:[{type:"desc",attributes:{"text":"<p>Aborts a currently running process.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"load"},children:[{type:"params",children:[{type:"param",attributes:{"name":"url"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">URL</span> of the script</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"callback"},children:[{type:"desc",attributes:{"text":"<p>Callback to execute</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Function"}}]}]},{type:"param",attributes:{"defaultValue":"window","name":"context"},children:[{type:"desc",attributes:{"text":"<p>Context in which the function should be executed</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Loads the script from the given <span class=\"caps\">URL</span>. It is possible to define\na callback and a context in which the callback is executed.</p>\n\n<p>The callback is executed when the process is done with any\nof these status messages: success, fail or abort.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]}]}]}