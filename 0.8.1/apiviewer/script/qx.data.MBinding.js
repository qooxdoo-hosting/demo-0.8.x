{type:"class",attributes:{"packageName":"qx.data","fullName":"qx.data.MBinding","type":"mixin","name":"MBinding"},children:[{type:"desc",attributes:{"text":"<p><span class=\"caps\">EXPERIMENTAL</span>!!!</p>\n\n<p>The data binding package is still under development so there will be changes\nto the <span class=\"caps\">API</span>. This Features is for texting purpose only.</p>"}},{type:"methods",children:[{type:"method",attributes:{"isMixin":"true","name":"bind"},children:[{type:"params",children:[{type:"param",attributes:{"name":"sourcePropertyChain"},children:[{type:"desc",attributes:{"text":"<p>The property chain which represents\n  the source property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"targetObject"},children:[{type:"desc",attributes:{"text":"<p>The object which the source should\n  be bind to.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]},{type:"param",attributes:{"name":"targetProperty"},children:[{type:"desc",attributes:{"text":"<p>The property name of the target object.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"options"},children:[{type:"desc",attributes:{"text":"<p>A map containing the options. See\n  {@link qx.data.SingleValueBinding#bindEventToProperty} for more\n  information.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>The bind method delegates the call to the\n{@link qx.data.SingleValueBinding#bind} function. As source, the current\nobject (this) will be used.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Returns the internal id for that binding. This can be used\n  for referencing the binding e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"bindEvent"},children:[{type:"params",children:[{type:"param",attributes:{"name":"sourceEvent"},children:[{type:"desc",attributes:{"text":"<p>The event of the source object which chould\n  be the change event in common but has to be an\n  {@link qx.event.type.Data} event.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"targetObject"},children:[{type:"desc",attributes:{"text":"<p>The object which the source should\n  be bind to.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]},{type:"param",attributes:{"name":"targetProperty"},children:[{type:"desc",attributes:{"text":"<p>The property name of the target object.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"options"},children:[{type:"desc",attributes:{"text":"<p>A map containing the options. See\n  {@link qx.data.SingleValueBinding#bindEventToProperty} for more\n  information.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>This method binds a {@link qx.event.type.Data} event to the given target.\nTherefore it just maps the method call to the static\n{@link qx.data.SingleValueBinding#bindEventToProperty}.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Returns the internal id for that binding. This can be used\n  for referencing the binding or e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index. It&#8217;s the id which will\n  be returned b< the {@link qx.core.Object#addListener} method.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"bindObject"},children:[{type:"params",children:[{type:"param",attributes:{"name":"sourceObject"},children:[{type:"desc",attributes:{"text":"<p>The source of the binding.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]},{type:"param",attributes:{"name":"sourcePropertyChain"},children:[{type:"desc",attributes:{"text":"<p>The property chain which represents\n  the source property.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"targetProperty"},children:[{type:"desc",attributes:{"text":"<p>The property name of the target object.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"options"},children:[{type:"desc",attributes:{"text":"<p>A map containing the options. See\n  {@link qx.data.SingleValueBinding#bindEventToProperty} for more\n  information.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>The method is equals the {@link #bind} function. It maps the call to\n{@link qx.data.SingleValueBinding#bind}. The difference is that &#8216;this&#8217; is\nthe target object and not the source object.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Returns the internal id for that binding. This can be used\n  for referencing the binding or e.g. for removing. This is not an atomic\n  id so you can&#8217;t you use it as a hash-map index.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"getBindings"},children:[{type:"desc",attributes:{"text":"<p>Returns an array which lists all bindings for the object.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>An array of binding informations. Every binding\n  information is an array itself containing id, sourceObject, sourceEvent,\n  targetObject and targetProperty in that order.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Array"}}]}]}]},{type:"method",attributes:{"isMixin":"true","name":"removeAllBindings"},children:[{type:"desc",attributes:{"text":"<p>Removes all bindings from the object.</p>"}}]},{type:"method",attributes:{"isMixin":"true","name":"removeBinding"},children:[{type:"params",children:[{type:"param",attributes:{"name":"id"},children:[{type:"desc",attributes:{"text":"<p>The id of the binding.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Removes the binding with the given id from the current object. The\nid hast to be the id returned by any of the bind functions.</p>"}}]}]}]}